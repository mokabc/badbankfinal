{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhmd_\\\\OneDrive\\\\Desktop\\\\JadBadBank\\\\src\\\\withdraw.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport UserContext from \"./user-context\";\nimport Card from \"./card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Withdraw() {\n  _s();\n\n  const [showForm, setShowForm] = React.useState(true);\n  const [status, setStatus] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [amount, setAmount] = React.useState(0);\n  const ctx = React.useContext(UserContext);\n\n  function validate(field, label) {\n    if (!field) {\n      setStatus(\"Error: \" + label);\n      setTimeout(() => setStatus(\"\"), 3000);\n      return false;\n    }\n\n    return true;\n  }\n\n  function validateAmount(field, label) {\n    if (!validate(field, label)) {\n      return false;\n    }\n\n    const amount = parseFloat(field, 10);\n\n    if (!Number.isFinite(amount) || amount <= 0) {\n      setStatus(\"Please enter a valid amount\");\n      setTimeout(() => setStatus(\"\"), 3000);\n      return false;\n    }\n\n    return true;\n  }\n\n  function handleWithdraw() {\n    if (!validate(email, \"email\")) return;\n    if (!validateAmount(amount, \"amount\")) return;\n    const usersLocal = ctx.users;\n    const userIndex = usersLocal.findIndex(user => user.email === email);\n\n    if (userIndex < 0) {\n      setStatus(\"Please enter an existing email\");\n      setTimeout(() => setStatus(\"\"), 3000);\n      return false;\n    }\n\n    const requestedAmount = parseFloat(amount, 10);\n\n    if (usersLocal[userIndex].balance < requestedAmount) {\n      setStatus(\"Not enough money in the account\");\n      setTimeout(() => setStatus(\"\"), 3000);\n      return false;\n    }\n\n    usersLocal[userIndex].balance = usersLocal[userIndex].balance - requestedAmount;\n    ctx.users = usersLocal;\n    setShowForm(false);\n  }\n\n  function clearForm() {\n    setEmail(\"\");\n    setAmount(0);\n    setShowForm(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"primary\",\n    header: \"Withdraw\",\n    status: status,\n    body: showForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Email address\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => setEmail(e.currentTarget.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), \"Amount\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        id: \"amount\",\n        placeholder: \"Enter amount\",\n        value: amount,\n        onChange: e => setAmount(e.currentTarget.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-light\",\n        onClick: handleWithdraw,\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-light\",\n        onClick: clearForm,\n        children: \"Withdraw again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Withdraw, \"y1zjwuSdhk963TXl67zQ01UE4iM=\");\n\n_c = Withdraw;\nexport default Withdraw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"sources":["C:/Users/mhmd_/OneDrive/Desktop/JadBadBank/src/withdraw.js"],"names":["React","UserContext","Card","Withdraw","showForm","setShowForm","useState","status","setStatus","email","setEmail","amount","setAmount","ctx","useContext","validate","field","label","setTimeout","validateAmount","parseFloat","Number","isFinite","handleWithdraw","usersLocal","users","userIndex","findIndex","user","requestedAmount","balance","clearForm","e","currentTarget","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport UserContext from \"./user-context\";\r\nimport Card from \"./card\";\r\n\r\nfunction Withdraw() {\r\n  const [showForm, setShowForm] = React.useState(true);\r\n  const [status, setStatus] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [amount, setAmount] = React.useState(0);\r\n  const ctx = React.useContext(UserContext);\r\n\r\n  function validate(field, label) {\r\n    if (!field) {\r\n      setStatus(\"Error: \" + label);\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function validateAmount(field, label) {\r\n    if (!validate(field, label)) {\r\n      return false;\r\n    }\r\n    const amount = parseFloat(field, 10);\r\n    if (!Number.isFinite(amount) || amount <= 0) {\r\n      setStatus(\"Please enter a valid amount\" );\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function handleWithdraw() {\r\n    if (!validate(email, \"email\")) return;\r\n    if (!validateAmount(amount, \"amount\")) return;\r\n\r\n    const usersLocal = ctx.users;\r\n\r\n    const userIndex = usersLocal.findIndex((user => user.email === email));\r\n\r\n    if (userIndex < 0) {\r\n      setStatus(\"Please enter an existing email\");\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n\r\n    const requestedAmount = parseFloat(amount, 10);\r\n\r\n    if (usersLocal[userIndex].balance < requestedAmount) {\r\n      setStatus(\"Not enough money in the account\");\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n\r\n    usersLocal[userIndex].balance = usersLocal[userIndex].balance - requestedAmount;\r\n    ctx.users = usersLocal;\r\n    setShowForm(false);\r\n  }\r\n\r\n  function clearForm() {\r\n    setEmail(\"\");\r\n    setAmount(0);\r\n    setShowForm(true);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      bgcolor=\"primary\"\r\n      header=\"Withdraw\"\r\n      status={status}\r\n      body={\r\n        showForm ? (\r\n          <>\r\n            Email address\r\n            <br />\r\n            <input\r\n              type=\"input\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            Amount\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"amount\"\r\n              placeholder=\"Enter amount\"\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-light\"\r\n              onClick={handleWithdraw}\r\n            >\r\n              Withdraw\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h5>Success</h5>\r\n            <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>\r\n              Withdraw again\r\n            </button>\r\n          </>\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default Withdraw;\r\n"]},"metadata":{},"sourceType":"module"}