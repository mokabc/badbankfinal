{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhmd_\\\\OneDrive\\\\Desktop\\\\JadBadBank\\\\src\\\\balance.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport UserContext from \"./user-context\";\nimport Card from \"./card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Balance() {\n  _s();\n\n  const [showForm, setShowForm] = React.useState(true);\n  const [status, setStatus] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [balance, setBalance] = React.useState(0);\n  const ctx = React.useContext(UserContext);\n\n  function validate(field, label) {\n    if (!field) {\n      setStatus(\"Error: \" + label);\n      setTimeout(() => setStatus(\"\"), 3000);\n      return false;\n    }\n\n    return true;\n  }\n\n  function handleCheckBalance() {\n    if (!validate(email, \"email\")) return;\n    const userIndex = ctx.users.findIndex(user => user.email === email);\n\n    if (userIndex < 0) {\n      setStatus(\"Please enter an existing email\");\n      setTimeout(() => setStatus(\"\"), 3000);\n      return false;\n    }\n\n    setBalance(ctx.users[userIndex].balance);\n    setShowForm(false);\n  }\n\n  function clearForm() {\n    setEmail(\"\");\n    setBalance(0);\n    setShowForm(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"primary\",\n    header: \"Balance\",\n    status: status,\n    body: showForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Email address\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => setEmail(e.currentTarget.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-light\",\n        onClick: handleCheckBalance,\n        children: \"Show Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Balance: \", balance, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-light\",\n        onClick: clearForm,\n        children: \"Check another account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Balance, \"U4TnO0k1zWyf8nkSH8mDsiH4X5k=\");\n\n_c = Balance;\nexport default Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"sources":["C:/Users/mhmd_/OneDrive/Desktop/JadBadBank/src/balance.js"],"names":["React","UserContext","Card","Balance","showForm","setShowForm","useState","status","setStatus","email","setEmail","balance","setBalance","ctx","useContext","validate","field","label","setTimeout","handleCheckBalance","userIndex","users","findIndex","user","clearForm","e","currentTarget","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport UserContext from \"./user-context\";\r\nimport Card from \"./card\";\r\n\r\nfunction Balance() {\r\n  const [showForm, setShowForm] = React.useState(true);\r\n  const [status, setStatus] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [balance, setBalance] = React.useState(0);\r\n  const ctx = React.useContext(UserContext);\r\n\r\n  function validate(field, label) {\r\n    if (!field) {\r\n      setStatus(\"Error: \" + label);\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function handleCheckBalance() {\r\n    if (!validate(email, \"email\")) return;\r\n\r\n    const userIndex = ctx.users.findIndex((user => user.email === email));\r\n\r\n    if (userIndex < 0) {\r\n      setStatus(\"Please enter an existing email\");\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n\r\n    setBalance(ctx.users[userIndex].balance);\r\n    setShowForm(false);\r\n  }\r\n\r\n  function clearForm() {\r\n    setEmail(\"\");\r\n    setBalance(0);\r\n    setShowForm(true);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      bgcolor=\"primary\"\r\n      header=\"Balance\"\r\n      status={status}\r\n      body={\r\n        showForm ? (\r\n          <>\r\n            Email address\r\n            <br />\r\n            <input\r\n              type=\"input\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-light\"\r\n              onClick={handleCheckBalance}\r\n            >\r\n              Show Balance\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            Balance: {balance}\r\n            <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>\r\n              Check another account\r\n            </button>\r\n          </>\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default Balance;\r\n"]},"metadata":{},"sourceType":"module"}