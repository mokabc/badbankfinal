{"version":3,"sources":["user-context.js","card.js","home.js","nav-bar.js","create-account.js","login.js","deposit.js","withdraw.js","balance.js","all-data.js","index.js"],"names":["React","createContext","Card","props","className","bgcolor","txtcolor","style","maxWidth","header","title","text","body","status","id","Home","src","alt","NavBar","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","CreateAccount","useState","showForm","setShowForm","setStatus","name","setName","email","setEmail","password","setPassword","ctx","useContext","UserContext","validate","field","label","setTimeout","placeholder","value","onChange","e","currentTarget","onClick","usersLocal","undefined","users","find","user","push","balance","Login","show","setShow","Deposit","amount","setAmount","parseFloat","Number","isFinite","validateAmount","userIndex","findIndex","Withdraw","requestedAmount","Balance","setBalance","AllData","JSON","stringify","Spa","Provider","padding","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fa629ae.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default React.createContext({});\n","import React from \"react\";\r\n\r\n// const Route = ReactRouterDOM.Route;\r\n// const Link = ReactRouterDOM.Link;\r\n// const HashRouter = ReactRouterDOM.HashRouter;\r\n// const UserContext = React.createContext(null);\r\n\r\nfunction Card(props) {\r\n  function classes() {\r\n    const bg = props.bgcolor ? \" bg-\" + props.bgcolor : \" \";\r\n    const txt = props.txtcolor ? \" text-\" + props.txtcolor : \" text-white\";\r\n    return \"card mb-3 \" + bg + txt;\r\n  }\r\n\r\n  return (\r\n    <div className={classes()} style={{ maxWidth: \"18rem\" }}>\r\n      <div className=\"card-header\">{props.header}</div>\r\n      <div className=\"card-body\">\r\n        {props.title && <h5 className=\"card-title\">{props.title}</h5>}\r\n        {props.text && <p className=\"card-text\">{props.text}</p>}\r\n        {props.body}\r\n        {props.status && <div id=\"createStatus\">{props.status}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./card\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <Card\r\n      txtcolor=\"black\"\r\n      header=\"BadBank Landing Module\"\r\n      title=\"Welcome to the bank\"\r\n      text=\"You can move around using the navigation bar.\"\r\n      body={<img src=\"bank.png\" className=\"img-fluid\" alt=\"Bank logo\" />}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          BadBank\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/create-account/\">\r\n                Create Account\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/login/\">\r\n                Login\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/deposit/\">\r\n                Deposit\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/withdraw/\">\r\n                Withdraw\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/balance/\">\r\n                Balance\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/all-data/\">\r\n                AllData\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport UserContext from \"./user-context\";\r\nimport Card from \"./card\";\r\n\r\n\r\nfunction CreateAccount() {\r\n  // console.log(\"USERS \", users ?? []);\r\n  const [showForm, setShowForm] = React.useState(true);\r\n  const [status, setStatus] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const ctx = React.useContext(UserContext);\r\n\r\n  function validate(field, label) {\r\n    if (!field) {\r\n      setStatus(\"Error: \" + label);\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function validateEmail(field, users) {\r\n    const foundValue = users.find(user => user.email === field);\r\n    if (foundValue !== undefined) {\r\n      setStatus(\"Email already exists\");\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function handleCreate() {\r\n    let usersLocal = [];\r\n    if (ctx.users !== undefined) {\r\n      usersLocal = ctx.users;\r\n    }\r\n    if (!validate(name, \"name\")) return;\r\n    if (!validate(email, \"email\")) return;\r\n    if (!validateEmail(email, usersLocal)) return;\r\n    if (!validate(password, \"password\")) return;\r\n\r\n    usersLocal.push({ name, email, password, balance: 0 });\r\n    ctx.users = usersLocal;\r\n    setShowForm(false);\r\n  }\r\n\r\n  function clearForm() {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setShowForm(true);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      bgcolor=\"primary\"\r\n      header=\"Create Account\"\r\n      status={status}\r\n      body={\r\n        showForm ? (\r\n          <>\r\n            Name\r\n            <br />\r\n            <input\r\n              type=\"input\"\r\n              className=\"form-control\"\r\n              id=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            Email address\r\n            <br />\r\n            <input\r\n              type=\"input\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            Password\r\n            <br />\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-light\"\r\n              onClick={handleCreate}\r\n            >\r\n              Create Account\r\n            </button>\r\n          </>\r\n        ) : (\r\n            <>\r\n              <h5>Success</h5>\r\n              <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>\r\n                Add another account\r\n            </button>\r\n            </>\r\n          )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default CreateAccount;\r\n\r\n","import React from \"react\";\r\nimport UserContext from \"./user-context\";\r\nimport Card from \"./card\";\r\n\r\nfunction Login() {\r\n  const [show, setShow] = React.useState(true);\r\n  const [status, setStatus] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const ctx = React.useContext(UserContext);\r\n\r\n  function validate(field, label) {\r\n    if (!field) {\r\n      setStatus(\"Error: \" + label);\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function handleLogin() {\r\n    if (!validate(email, \"email\")) return;\r\n    if (!validate(password, \"password\")) return;\r\n\r\n    const retrievedUser\r\n      = ctx.users.find(user => user.email === email && user.password === password);\r\n    if (retrievedUser === undefined) {\r\n      setStatus(\"Incorrect credentials\");\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n    setShow(false);\r\n  }\r\n\r\n  function clearForm() {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setShow(true);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      bgcolor=\"primary\"\r\n      header=\"Login\"\r\n      status={status}\r\n      body={\r\n        show ? (\r\n          <>\r\n            Email address\r\n            <br />\r\n            <input\r\n              type=\"input\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            Password\r\n            <br />\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-light\"\r\n              onClick={handleLogin}\r\n            >\r\n              Login\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h5>Success</h5>\r\n            <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>\r\n              Log out\r\n            </button>\r\n          </>\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport UserContext from \"./user-context\";\r\nimport Card from \"./card\";\r\n\r\nfunction Deposit() {\r\n  const [showForm, setShowForm] = React.useState(true);\r\n  const [status, setStatus] = React.useState(\"\");\r\n  const [amount, setAmount] = React.useState(0);\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const ctx = React.useContext(UserContext);\r\n\r\n  function validate(field, label) {\r\n    if (!field) {\r\n      setStatus(\"Error: \" + label);\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function validateAmount(field, label) {\r\n    if (!validate(field, label)) {\r\n      return false;\r\n    }\r\n    const amount = parseFloat(field, 10);\r\n    if (!Number.isFinite(amount) || amount <= 0) {\r\n      setStatus(\"Please enter a valid amount\" );\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function handleDeposit() {\r\n    if (!validate(email, \"email\")) return;\r\n    if (!validateAmount(amount, \"amount\")) return;\r\n\r\n    const usersLocal = ctx.users;\r\n\r\n    const userIndex = usersLocal.findIndex((user => user.email === email));\r\n\r\n    if (userIndex < 0) {\r\n      setStatus(\"Please enter an existing email\");\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n\r\n    usersLocal[userIndex].balance = usersLocal[userIndex].balance + parseFloat(amount, 10);\r\n    ctx.users = usersLocal;\r\n    setShowForm(false);\r\n  }\r\n\r\n  function clearForm() {\r\n    setEmail(\"\");\r\n    setAmount(0);\r\n    setShowForm(true);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      bgcolor=\"primary\"\r\n      header=\"Deposit\"\r\n      status={status}\r\n      body={\r\n        showForm ? (\r\n          <>\r\n            Email address\r\n            <br />\r\n            <input\r\n              type=\"input\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            Amount\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"amount\"\r\n              placeholder=\"Enter amount\"\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-light\"\r\n              onClick={handleDeposit}\r\n            >\r\n              Deposit\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h5>Success</h5>\r\n            <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>\r\n              Deposit again\r\n            </button>\r\n          </>\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default Deposit;\r\n","import React from \"react\";\r\nimport UserContext from \"./user-context\";\r\nimport Card from \"./card\";\r\n\r\nfunction Withdraw() {\r\n  const [showForm, setShowForm] = React.useState(true);\r\n  const [status, setStatus] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [amount, setAmount] = React.useState(0);\r\n  const ctx = React.useContext(UserContext);\r\n\r\n  function validate(field, label) {\r\n    if (!field) {\r\n      setStatus(\"Error: \" + label);\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function validateAmount(field, label) {\r\n    if (!validate(field, label)) {\r\n      return false;\r\n    }\r\n    const amount = parseFloat(field, 10);\r\n    if (!Number.isFinite(amount) || amount <= 0) {\r\n      setStatus(\"Please enter a valid amount\" );\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function handleWithdraw() {\r\n    if (!validate(email, \"email\")) return;\r\n    if (!validateAmount(amount, \"amount\")) return;\r\n\r\n    const usersLocal = ctx.users;\r\n\r\n    const userIndex = usersLocal.findIndex((user => user.email === email));\r\n\r\n    if (userIndex < 0) {\r\n      setStatus(\"Please enter an existing email\");\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n\r\n    const requestedAmount = parseFloat(amount, 10);\r\n\r\n    if (usersLocal[userIndex].balance < requestedAmount) {\r\n      setStatus(\"Not enough money in the account\");\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n\r\n    usersLocal[userIndex].balance = usersLocal[userIndex].balance - requestedAmount;\r\n    ctx.users = usersLocal;\r\n    setShowForm(false);\r\n  }\r\n\r\n  function clearForm() {\r\n    setEmail(\"\");\r\n    setAmount(0);\r\n    setShowForm(true);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      bgcolor=\"primary\"\r\n      header=\"Withdraw\"\r\n      status={status}\r\n      body={\r\n        showForm ? (\r\n          <>\r\n            Email address\r\n            <br />\r\n            <input\r\n              type=\"input\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            Amount\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"amount\"\r\n              placeholder=\"Enter amount\"\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-light\"\r\n              onClick={handleWithdraw}\r\n            >\r\n              Withdraw\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h5>Success</h5>\r\n            <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>\r\n              Withdraw again\r\n            </button>\r\n          </>\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default Withdraw;\r\n","import React from \"react\";\r\nimport UserContext from \"./user-context\";\r\nimport Card from \"./card\";\r\n\r\nfunction Balance() {\r\n  const [showForm, setShowForm] = React.useState(true);\r\n  const [status, setStatus] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [balance, setBalance] = React.useState(0);\r\n  const ctx = React.useContext(UserContext);\r\n\r\n  function validate(field, label) {\r\n    if (!field) {\r\n      setStatus(\"Error: \" + label);\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function handleCheckBalance() {\r\n    if (!validate(email, \"email\")) return;\r\n\r\n    const userIndex = ctx.users.findIndex((user => user.email === email));\r\n\r\n    if (userIndex < 0) {\r\n      setStatus(\"Please enter an existing email\");\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    }\r\n\r\n    setBalance(ctx.users[userIndex].balance);\r\n    setShowForm(false);\r\n  }\r\n\r\n  function clearForm() {\r\n    setEmail(\"\");\r\n    setBalance(0);\r\n    setShowForm(true);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      bgcolor=\"primary\"\r\n      header=\"Balance\"\r\n      status={status}\r\n      body={\r\n        showForm ? (\r\n          <>\r\n            Email address\r\n            <br />\r\n            <input\r\n              type=\"input\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-light\"\r\n              onClick={handleCheckBalance}\r\n            >\r\n              Show Balance\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            Balance: {balance}\r\n            <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>\r\n              Check another account\r\n            </button>\r\n          </>\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default Balance;\r\n","import React from \"react\";\r\nimport UserContext from \"./user-context\";\r\n\r\nfunction AllData() {\r\n  const ctx = React.useContext(UserContext);\r\n  return (\r\n    <>\r\n      <h5>All Data in Store</h5>\r\n      {JSON.stringify(ctx)}\r\n      <br />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllData;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter, Route } from 'react-router-dom'\r\nimport UserContext from './user-context';\r\nimport Home from \"./home\";\r\nimport NavBar from \"./nav-bar\";\r\nimport CreateAccount from \"./create-account\";\r\nimport Login from \"./login\";\r\nimport Deposit from \"./deposit\";\r\nimport Withdraw from \"./withdraw\";\r\nimport Balance from \"./balance\";\r\nimport AllData from \"./all-data\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction Spa() {\r\n  return (\r\n    <HashRouter>\r\n      <NavBar />\r\n      <UserContext.Provider value={{\r\n        users: [\r\n          {\r\n            name: \"abel\",\r\n            email: \"abel@mit.edu\",\r\n            password: \"secret\",\r\n            balance: 100,\r\n          },\r\n        ],\r\n      }}>\r\n        <div className=\"container\" style={{ padding: \"20px\" }}>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/create-account/\" component={CreateAccount} />\r\n          <Route path=\"/login/\" component={Login} />\r\n          <Route path=\"/deposit/\" component={Deposit} />\r\n          <Route path=\"/withdraw/\" component={Withdraw} />\r\n          <Route path=\"/balance/\" component={Balance} />\r\n          <Route path=\"/all-data/\" component={AllData} />\r\n        </div>\r\n      </UserContext.Provider>\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nReactDOM.render(<Spa />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}